[gd_scene load_steps=17 format=2]

[ext_resource path="res://Assets/Textures/LevelBG/MagicalVoid/2.jpg" type="Texture" id=1]
[ext_resource path="res://Components/Tilesets/Void/Void.tscn" type="PackedScene" id=2]
[ext_resource path="res://GameObjects/Character/Player/Player.tscn" type="PackedScene" id=3]
[ext_resource path="res://GameObjects/Blocks/ValueBlocks/PushableBlocks.tscn" type="PackedScene" id=4]
[ext_resource path="res://GameObjects/Tiles/TempleTile/Temple.tscn" type="PackedScene" id=6]
[ext_resource path="res://Components/ResultPanel/ResultPanel.tscn" type="PackedScene" id=7]
[ext_resource path="res://GameObjects/Blocks/SymbolBlocks/SymbolBlocks.tscn" type="PackedScene" id=8]
[ext_resource path="res://GameObjects/Tiles/ScannerTile/ScannerTile.tscn" type="PackedScene" id=9]
[ext_resource path="res://Temp/Crystal/Crystal.tscn" type="PackedScene" id=10]
[ext_resource path="res://Components/PausePanel/PausePanel.tscn" type="PackedScene" id=15]
[ext_resource path="res://Assets/Textures/PauseButton.png" type="Texture" id=16]
[ext_resource path="res://Assets/Fonts/source-sans-pro/SourceSansPro-Regular.ttf" type="DynamicFontData" id=17]
[ext_resource path="res://Assets/Textures/UndoButton.png" type="Texture" id=18]

[sub_resource type="GDScript" id=11]
script/source = "extends Node

onready var player := $GameObjects/Player
onready var temple := $GameObjects/Temple
onready var pause := $PausePanel
onready var resultPanel := $ResultPanel

export(String) var timelineName = \"\"
export var answers := {
	0: null,
	1: null,
	2: null,
	3: null,
}
export(bool) var resultAnimating: bool = false
export(int, 0, 4) var requiredMedal = 0

var moveCount: int = 0
var result = Array()
var time = 0
var secs
var mins

var undoRedoJournal: UndoRedo = UndoRedo.new()
var canUndo: bool = true

func _ready():
	Input.set_mouse_mode(Input.MOUSE_MODE_HIDDEN)
	_playDialog(timelineName)
	_connectSignal()

func _playDialog(value):
	if value == \"\":
		_playGame()
#		just play the game
	else:
#		play Dialog
		if get_node_or_null('DialogNode') == null:
			GameManager._setGamePaused(true)
			GameManager._setGameOver(true)
			GameManager._setGameTimerActive(false)
			var dialog = Dialogic.start(value)
			dialog.connect('timeline_end', self, '_dialogEnd')
			add_child(dialog)

func _dialogEnd(timeline_name):
	_playGame()

func _playGame():
	GameManager._setGameOver(false)
	GameManager._setGamePaused(false)
	GameManager._setGameTimerActive(true)

func _connectSignal():
	player.connect(\"objectStateChange\", self, \"_playerJournal\")
	player.connect(\"playerPushed\", self, \"_playerPushJournal\")
	temple.connect(\"levelAccomplish\", self, \"_onLevelAccomplish\")
	
	for box in get_tree().get_nodes_in_group(\"Box\"):
		box.connect(\"boxMoves\", self, \"_boxJournal\")
	
	for symbol in get_tree().get_nodes_in_group(\"Symbols\"):
		symbol.connect(\"boxMoves\", self, \"_operationalBoxJournal\")
	
	for phantom in get_tree().get_nodes_in_group(\"Bridge\"):
		phantom.connect(\"UnwalkableState\", self, \"_onPhantomTileStateChange\")
	
	for scanner in get_tree().get_nodes_in_group(\"Reader\"):
		scanner.connect(\"boxValue\", self, \"_onScannerInput\")
		result.append(scanner._getResult())
	
	for operational in get_tree().get_nodes_in_group(\"Operational\"):
		operational.connect(\"operationalTileState\", self, \"_onOperationalStateChange\")

func _unhandled_input(event):
	if event.is_pressed():
		if event.is_action_pressed(\"escape\") and !GameManager._getGameOver():
			_changeGameState()
			Input.set_mouse_mode(Input.MOUSE_MODE_VISIBLE)

func _process(delta):
	_gameTimer(delta)

	if Input.is_action_pressed(\"undo\"):
		_undoSystem()

func _gameTimer(value):
	if GameManager._getGameTimerActive():
		time += value
	
	secs = fmod(time, 60)
	mins = fmod(time, 60 * 60) / 60

func _onPhantomTileStateChange():
	for unWalkable in get_tree().get_nodes_in_group(\"Unwalkable\"):
		if _getAllBridgeState().has(true):
			unWalkable._setDisableToTrue()
		else:
			unWalkable._setDisableToFalse()

func _onScannerInput(value, id, scannerNode):
	result.clear()

	var valueString = str(value)

	for crystal in get_tree().get_nodes_in_group(\"Crystal\"):
		if id == crystal.scannerID:
			if valueString == \"Null\":
				crystal._crystalHasValue(false, value)
			else:
				crystal._crystalHasValue(true, value)

	for answerId in answers.size():
		if answers[answerId] != null:
			if answerId == id:
				if valueString == str(answers[answerId]):
					scannerNode._setResult(true)
				else:
					scannerNode._setResult(false)

	for scanner in get_tree().get_nodes_in_group(\"Reader\"):
		result.append(scanner._getResult())

	if result.has(false):
		$GameObjects.find_node(\"Temple\")._setAnswer(false)
		$GameObjects.find_node(\"Temple\")._setDoorState(false)
	else:
		$GameObjects.find_node(\"Temple\")._setAnswer(true)
		$GameObjects.find_node(\"Temple\")._setDoorState(true)

func _getAllBridgeState():
	var bridges := Array()
	bridges.clear()
	for bridgeButton in get_tree().get_nodes_in_group(\"Bridge\"):
		bridges.append(bridgeButton._getPress())
	return bridges

func _changeGameState():
	GameManager._setGameTimerActive(!GameManager._getGameTimerActive())
	GameManager._setGamePaused(!GameManager._getGamePause())
	pause.visible = true
	set_process_unhandled_input(false)
	get_tree().paused = true

func _onLevelAccomplish():
	GameManager._setGameOver(true)
	GameManager._setGameTimerActive(!GameManager._getGameTimerActive())
	resultPanel._showResult(mins, secs, self.name.right(5).to_int())
	
	if(resultPanel._newLevelUnlocked(requiredMedal)):
		GameManager._setOpenLevels(self.name.right(5).to_int() + 1)

func _playerJournal(object):
	undoRedoJournal.create_action(\"Move\")
	undoRedoJournal.add_undo_method(object, \"undoMovement\")

	undoRedoJournal.commit_action()

func _playerPushJournal(object):
	undoRedoJournal.create_action(\"Pushing\")
	undoRedoJournal.add_undo_method(object, \"undoMovement\")

	undoRedoJournal.commit_action()

func _boxJournal(object):
	undoRedoJournal.create_action(\"Pushed\")
	undoRedoJournal.add_undo_method(object, \"undoBoxPosition\")
	undoRedoJournal.add_undo_method(object, \"undoBoxValue\", object.boxValue)

	undoRedoJournal.commit_action()

func _operationalBoxJournal(object):
	undoRedoJournal.create_action(\"Pushed\")
	undoRedoJournal.add_undo_method(object, \"undoBoxPosition\")
	
	undoRedoJournal.commit_action()

func _onOperationalStateChange(object):
	undoRedoJournal.create_action(\"Operational Added\")
	undoRedoJournal.add_undo_method(object, \"_undoOperationalTile\")
	
	undoRedoJournal.commit_action()

func _on_PauseButton_pressed():
	_changeGameState()

func _on_Timer_timeout():
	canUndo = true

func _on_UndoButton_pressed():
	_undoSystem()

func _undoSystem():
	if !GameManager._getGameOver():
		if !player.moving:
			if canUndo:
				if undoRedoJournal.has_undo():
					match undoRedoJournal.get_current_action_name():
						\"Move\":
							undoRedoJournal.undo()
						\"Pushing\":
							for i in 2:	
								undoRedoJournal.undo()
						\"Operational Added\":
							for i in 3:	
								undoRedoJournal.undo()
					canUndo = false
					$Timer.start()
"

[sub_resource type="DynamicFont" id=8]
size = 12
font_data = ExtResource( 17 )

[sub_resource type="DynamicFont" id=10]
size = 12
font_data = ExtResource( 17 )

[node name="Level 16" type="Node"]
script = SubResource( 11 )

[node name="BackgroundLayer" type="CanvasLayer" parent="."]
layer = -10

[node name="TextureRect" type="TextureRect" parent="BackgroundLayer"]
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 1 )
expand = true
stretch_mode = 7

[node name="Camera2D" type="Camera2D" parent="."]
position = Vector2( -448, 80 )
current = true
zoom = Vector2( 0.5, 0.5 )

[node name="Void" parent="." instance=ExtResource( 2 )]

[node name="TileMap" parent="Void" index="0"]
tile_data = PoolIntArray( 65501, 1, 0, 65502, 1, 0, 65503, 1, 0, 65504, 1, 0, 65505, 1, 0, 65506, 1, 0, 65507, 1, 0, 65508, 1, 0, 65509, 1, 0, 131037, 1, 0, 131038, 0, 0, 131039, 0, 1, 131040, 0, 1, 131041, 0, 1, 131042, 0, 1, 131043, 0, 1, 131044, 0, 2, 131045, 1, 0, 196573, 1, 0, 196574, 0, 65536, 196575, 1, 131074, 196576, 1, 131074, 196577, 1, 131074, 196578, 1, 131074, 196579, 1, 131074, 196580, 0, 65538, 196581, 1, 0, 196582, 1, 0, 196583, 1, 0, 196584, 1, 0, 196585, 1, 0, 196586, 1, 0, 262109, 1, 0, 262110, 0, 65536, 262111, 1, 131074, 262112, 1, 131074, 262113, 1, 131074, 262114, 1, 131074, 262115, 1, 131074, 262116, 0, 65538, 262117, 1, 0, 262118, 1, 131074, 262119, 1, 131074, 262120, 1, 131074, 262121, 1, 131074, 262122, 1, 0, 327645, 1, 0, 327646, 0, 65536, 327647, 1, 131074, 327648, 1, 131074, 327649, 1, 131074, 327650, 1, 131074, 327651, 1, 131074, 327652, 0, 65538, 327653, 1, 0, 327654, 1, 131074, 327655, 1, 131074, 327656, 1, 131074, 327657, 1, 131074, 327658, 1, 0, 393181, 1, 0, 393182, 0, 65536, 393183, 1, 131074, 393184, 1, 131074, 393185, 1, 131074, 393186, 1, 131074, 393187, 1, 131074, 393188, 0, 65538, 393189, 1, 0, 393190, 1, 131074, 393191, 1, 131074, 393192, 1, 131074, 393193, 1, 131074, 393194, 1, 0, 458717, 1, 0, 458718, 0, 65536, 458719, 1, 131074, 458720, 1, 131074, 458721, 1, 131074, 458722, 1, 131074, 458723, 1, 131074, 458724, 0, 65538, 458725, 1, 0, 458726, 1, 131074, 458727, 1, 131074, 458728, 1, 131074, 458729, 1, 131074, 458730, 1, 0, 524253, 1, 0, 524254, 0, 65536, 524255, 1, 131074, 524256, 1, 131074, 524257, 1, 131074, 524258, 1, 131074, 524259, 1, 131074, 524260, 0, 65538, 524261, 1, 0, 524262, 1, 0, 524263, 1, 0, 524264, 1, 0, 524265, 1, 0, 524266, 1, 0, 589789, 1, 0, 589790, 0, 131072, 589791, 0, 131073, 589792, 0, 131073, 589793, 0, 131073, 589794, 0, 131073, 589795, 0, 131073, 589796, 0, 131074, 589797, 1, 0, 655325, 1, 0, 655326, 1, 0, 655327, 1, 0, 655328, 1, 0, 655329, 1, 0, 655330, 1, 0, 655331, 1, 0, 655332, 1, 0, 655333, 1, 0 )

[node name="Blocks" parent="Void" index="1"]
tile_data = PoolIntArray( 196575, 0, 0, 196576, 0, 0, 196577, 0, 0, 196578, 0, 0, 196579, 0, 0, 262111, 0, 0, 262115, 0, 0, 327647, 0, 0, 327651, 0, 0, 393183, 0, 0, 393187, 0, 0, 458719, 0, 0, 458723, 0, 0, 524255, 0, 0, 524256, 0, 0, 524257, 0, 0, 524258, 0, 0, 524259, 0, 0 )

[node name="GameObjects" type="Node2D" parent="."]
position = Vector2( 8, 80 )

[node name="Player" parent="GameObjects" instance=ExtResource( 3 )]
position = Vector2( -512, 8 )

[node name="Temple" parent="GameObjects" instance=ExtResource( 6 )]
position = Vector2( -496, -24 )

[node name="Box4" parent="GameObjects" instance=ExtResource( 4 )]
position = Vector2( -496, 8 )
boxValue = 23

[node name="Box5" parent="GameObjects" instance=ExtResource( 4 )]
position = Vector2( -496, -8 )
boxValue = 23

[node name="Box7" parent="GameObjects" instance=ExtResource( 4 )]
position = Vector2( -496, 24 )
boxValue = 23

[node name="ScannerTile4" parent="GameObjects" instance=ExtResource( 9 )]
position = Vector2( -480, -8 )
scannerID = 1

[node name="ScannerTile5" parent="GameObjects" instance=ExtResource( 9 )]
position = Vector2( -512, 24 )
scannerID = 1

[node name="ScannerTile7" parent="GameObjects" instance=ExtResource( 9 )]
position = Vector2( -512, -8 )
scannerID = 1

[node name="Question" type="Node2D" parent="GameObjects"]
position = Vector2( 88, -128 )

[node name="Box3" parent="GameObjects/Question" instance=ExtResource( 4 )]
position = Vector2( -472, 120 )
boxValue = 78

[node name="Box4" parent="GameObjects/Question" instance=ExtResource( 4 )]
position = Vector2( -472, 104 )
boxValue = 45

[node name="SymbolBlocks2" parent="GameObjects/Question" instance=ExtResource( 8 )]
position = Vector2( -488, 112 )
operation = "Plus"

[node name="SymbolBlocks3" parent="GameObjects/Question" instance=ExtResource( 8 )]
position = Vector2( -504, 144 )
operation = "Equals"

[node name="Crystal" parent="GameObjects/Question" instance=ExtResource( 10 )]
position = Vector2( -472, 144 )

[node name="Crystal2" parent="GameObjects/Question" instance=ExtResource( 10 )]
position = Vector2( -488, 144 )
scannerID = 1

[node name="PausePanel" parent="." instance=ExtResource( 15 )]
visible = false

[node name="UILayer" type="CanvasLayer" parent="."]

[node name="Buttons" type="Control" parent="UILayer"]
anchor_right = 1.0

[node name="PauseButton" type="Button" parent="UILayer/Buttons"]
anchor_left = 1.0
anchor_right = 1.0
margin_left = -40.0
margin_top = 8.0
margin_right = -8.0
margin_bottom = 64.0
flat = true

[node name="TextureRect" type="TextureRect" parent="UILayer/Buttons/PauseButton"]
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 16 )
stretch_mode = 6

[node name="Label" type="Label" parent="UILayer/Buttons/PauseButton/TextureRect"]
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
margin_left = -12.0
margin_top = -22.0
margin_right = 13.0
custom_colors/font_color = Color( 0, 0, 0, 1 )
custom_fonts/font = SubResource( 8 )
text = "Esc"
align = 1
valign = 1

[node name="UndoButton" type="Button" parent="UILayer/Buttons"]
anchor_left = 1.0
anchor_right = 1.0
margin_left = -80.0
margin_top = 8.0
margin_right = -48.0
margin_bottom = 64.0
flat = true

[node name="TextureRect2" type="TextureRect" parent="UILayer/Buttons/UndoButton"]
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 18 )
stretch_mode = 6

[node name="Label" type="Label" parent="UILayer/Buttons/UndoButton/TextureRect2"]
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
margin_left = -16.0
margin_top = -22.0
margin_right = 16.0
custom_colors/font_color = Color( 0, 0, 0, 1 )
custom_fonts/font = SubResource( 10 )
text = "Undo"
align = 1
valign = 1

[node name="ResultPanel" parent="." instance=ExtResource( 7 )]
visible = false

[node name="Timer" type="Timer" parent="."]
wait_time = 0.2

[connection signal="pressed" from="UILayer/Buttons/PauseButton" to="." method="_on_PauseButton_pressed"]
[connection signal="pressed" from="UILayer/Buttons/UndoButton" to="." method="_on_UndoButton_pressed"]
[connection signal="timeout" from="Timer" to="." method="_on_Timer_timeout"]

[editable path="Void"]
